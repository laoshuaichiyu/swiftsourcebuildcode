// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 8)
//// Automatically Generated From UIDs.swift.gyb.
//// Do Not Edit Directly!
//===--------------- UIDs.swift - Sourcekitd UIDs in Swift ----------------===//
//
// This source file is part of the Swift.org open source project
//
// Copyright (c) 2014 - 2018 Apple Inc. and the Swift project authors
// Licensed under Apache License v2.0 with Runtime Library Exception
//
// See https://swift.org/LICENSE.txt for license information
// See https://swift.org/CONTRIBUTORS.txt for the list of Swift project authors
//
//===----------------------------------------------------------------------===//

extension SourceKitdUID {
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 24)
  public static let key_VersionMajor = SourceKitdUID(string: "key.version_major")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 24)
  public static let key_VersionMinor = SourceKitdUID(string: "key.version_minor")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 24)
  public static let key_VersionPatch = SourceKitdUID(string: "key.version_patch")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 24)
  public static let key_Results = SourceKitdUID(string: "key.results")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 24)
  public static let key_Request = SourceKitdUID(string: "key.request")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 24)
  public static let key_Notification = SourceKitdUID(string: "key.notification")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 24)
  public static let key_Kind = SourceKitdUID(string: "key.kind")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 24)
  public static let key_AccessLevel = SourceKitdUID(string: "key.accessibility")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 24)
  public static let key_SetterAccessLevel = SourceKitdUID(string: "key.setter_accessibility")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 24)
  public static let key_Keyword = SourceKitdUID(string: "key.keyword")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 24)
  public static let key_Name = SourceKitdUID(string: "key.name")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 24)
  public static let key_USR = SourceKitdUID(string: "key.usr")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 24)
  public static let key_OriginalUSR = SourceKitdUID(string: "key.original_usr")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 24)
  public static let key_DefaultImplementationOf = SourceKitdUID(string: "key.default_implementation_of")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 24)
  public static let key_InterestedUSR = SourceKitdUID(string: "key.interested_usr")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 24)
  public static let key_GenericParams = SourceKitdUID(string: "key.generic_params")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 24)
  public static let key_GenericRequirements = SourceKitdUID(string: "key.generic_requirements")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 24)
  public static let key_DocFullAsXML = SourceKitdUID(string: "key.doc.full_as_xml")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 24)
  public static let key_Line = SourceKitdUID(string: "key.line")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 24)
  public static let key_Column = SourceKitdUID(string: "key.column")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 24)
  public static let key_ReceiverUSR = SourceKitdUID(string: "key.receiver_usr")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 24)
  public static let key_IsDynamic = SourceKitdUID(string: "key.is_dynamic")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 24)
  public static let key_IsImplicit = SourceKitdUID(string: "key.is_implicit")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 24)
  public static let key_FilePath = SourceKitdUID(string: "key.filepath")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 24)
  public static let key_ModuleInterfaceName = SourceKitdUID(string: "key.module_interface_name")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 24)
  public static let key_Hash = SourceKitdUID(string: "key.hash")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 24)
  public static let key_CompilerArgs = SourceKitdUID(string: "key.compilerargs")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 24)
  public static let key_Severity = SourceKitdUID(string: "key.severity")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 24)
  public static let key_Offset = SourceKitdUID(string: "key.offset")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 24)
  public static let key_Length = SourceKitdUID(string: "key.length")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 24)
  public static let key_SourceFile = SourceKitdUID(string: "key.sourcefile")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 24)
  public static let key_SerializedSyntaxTree = SourceKitdUID(string: "key.serialized_syntax_tree")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 24)
  public static let key_SourceText = SourceKitdUID(string: "key.sourcetext")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 24)
  public static let key_EnableSyntaxMap = SourceKitdUID(string: "key.enablesyntaxmap")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 24)
  public static let key_SyntaxTreeTransferMode = SourceKitdUID(string: "key.syntaxtreetransfermode")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 24)
  public static let key_SyntaxTreeSerializationFormat = SourceKitdUID(string: "key.syntax_tree_serialization_format")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 24)
  public static let key_EnableStructure = SourceKitdUID(string: "key.enablesubstructure")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 24)
  public static let key_Description = SourceKitdUID(string: "key.description")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 24)
  public static let key_TypeName = SourceKitdUID(string: "key.typename")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 24)
  public static let key_RuntimeName = SourceKitdUID(string: "key.runtime_name")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 24)
  public static let key_SelectorName = SourceKitdUID(string: "key.selector_name")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 24)
  public static let key_AnnotatedDecl = SourceKitdUID(string: "key.annotated_decl")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 24)
  public static let key_FullyAnnotatedDecl = SourceKitdUID(string: "key.fully_annotated_decl")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 24)
  public static let key_FullyAnnotatedGenericSignature = SourceKitdUID(string: "key.fully_annotated_generic_signature")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 24)
  public static let key_DocBrief = SourceKitdUID(string: "key.doc.brief")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 24)
  public static let key_Context = SourceKitdUID(string: "key.context")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 24)
  public static let key_ModuleImportDepth = SourceKitdUID(string: "key.moduleimportdepth")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 24)
  public static let key_NumBytesToErase = SourceKitdUID(string: "key.num_bytes_to_erase")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 24)
  public static let key_NotRecommended = SourceKitdUID(string: "key.not_recommended")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 24)
  public static let key_Annotations = SourceKitdUID(string: "key.annotations")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 24)
  public static let key_DiagnosticStage = SourceKitdUID(string: "key.diagnostic_stage")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 24)
  public static let key_SyntaxMap = SourceKitdUID(string: "key.syntaxmap")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 24)
  public static let key_IsSystem = SourceKitdUID(string: "key.is_system")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 24)
  public static let key_Related = SourceKitdUID(string: "key.related")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 24)
  public static let key_Inherits = SourceKitdUID(string: "key.inherits")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 24)
  public static let key_Conforms = SourceKitdUID(string: "key.conforms")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 24)
  public static let key_Extends = SourceKitdUID(string: "key.extends")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 24)
  public static let key_Dependencies = SourceKitdUID(string: "key.dependencies")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 24)
  public static let key_Entities = SourceKitdUID(string: "key.entities")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 24)
  public static let key_NameOffset = SourceKitdUID(string: "key.nameoffset")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 24)
  public static let key_NameLength = SourceKitdUID(string: "key.namelength")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 24)
  public static let key_BodyOffset = SourceKitdUID(string: "key.bodyoffset")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 24)
  public static let key_BodyLength = SourceKitdUID(string: "key.bodylength")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 24)
  public static let key_ThrowOffset = SourceKitdUID(string: "key.throwoffset")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 24)
  public static let key_ThrowLength = SourceKitdUID(string: "key.throwlength")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 24)
  public static let key_DocOffset = SourceKitdUID(string: "key.docoffset")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 24)
  public static let key_DocLength = SourceKitdUID(string: "key.doclength")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 24)
  public static let key_IsLocal = SourceKitdUID(string: "key.is_local")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 24)
  public static let key_InheritedTypes = SourceKitdUID(string: "key.inheritedtypes")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 24)
  public static let key_Attributes = SourceKitdUID(string: "key.attributes")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 24)
  public static let key_Attribute = SourceKitdUID(string: "key.attribute")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 24)
  public static let key_Elements = SourceKitdUID(string: "key.elements")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 24)
  public static let key_SubStructure = SourceKitdUID(string: "key.substructure")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 24)
  public static let key_Ranges = SourceKitdUID(string: "key.ranges")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 24)
  public static let key_Fixits = SourceKitdUID(string: "key.fixits")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 24)
  public static let key_Diagnostics = SourceKitdUID(string: "key.diagnostics")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 24)
  public static let key_FormatOptions = SourceKitdUID(string: "key.editor.format.options")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 24)
  public static let key_CodeCompleteOptions = SourceKitdUID(string: "key.codecomplete.options")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 24)
  public static let key_FilterRules = SourceKitdUID(string: "key.codecomplete.filterrules")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 24)
  public static let key_NextRequestStart = SourceKitdUID(string: "key.nextrequeststart")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 24)
  public static let key_Popular = SourceKitdUID(string: "key.popular")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 24)
  public static let key_Unpopular = SourceKitdUID(string: "key.unpopular")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 24)
  public static let key_Hide = SourceKitdUID(string: "key.hide")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 24)
  public static let key_Platform = SourceKitdUID(string: "key.platform")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 24)
  public static let key_IsDeprecated = SourceKitdUID(string: "key.is_deprecated")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 24)
  public static let key_IsUnavailable = SourceKitdUID(string: "key.is_unavailable")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 24)
  public static let key_IsOptional = SourceKitdUID(string: "key.is_optional")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 24)
  public static let key_Message = SourceKitdUID(string: "key.message")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 24)
  public static let key_Introduced = SourceKitdUID(string: "key.introduced")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 24)
  public static let key_Deprecated = SourceKitdUID(string: "key.deprecated")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 24)
  public static let key_Obsoleted = SourceKitdUID(string: "key.obsoleted")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 24)
  public static let key_RemoveCache = SourceKitdUID(string: "key.removecache")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 24)
  public static let key_TypeInterface = SourceKitdUID(string: "key.typeinterface")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 24)
  public static let key_TypeUsr = SourceKitdUID(string: "key.typeusr")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 24)
  public static let key_ContainerTypeUsr = SourceKitdUID(string: "key.containertypeusr")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 24)
  public static let key_ModuleGroups = SourceKitdUID(string: "key.modulegroups")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 24)
  public static let key_BaseName = SourceKitdUID(string: "key.basename")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 24)
  public static let key_ArgNames = SourceKitdUID(string: "key.argnames")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 24)
  public static let key_SelectorPieces = SourceKitdUID(string: "key.selectorpieces")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 24)
  public static let key_NameKind = SourceKitdUID(string: "key.namekind")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 24)
  public static let key_LocalizationKey = SourceKitdUID(string: "key.localization_key")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 24)
  public static let key_IsZeroArgSelector = SourceKitdUID(string: "key.is_zero_arg_selector")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 24)
  public static let key_SwiftVersion = SourceKitdUID(string: "key.swift_version")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 24)
  public static let key_Value = SourceKitdUID(string: "key.value")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 24)
  public static let key_EnableDiagnostics = SourceKitdUID(string: "key.enablediagnostics")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 24)
  public static let key_GroupName = SourceKitdUID(string: "key.groupname")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 24)
  public static let key_ActionName = SourceKitdUID(string: "key.actionname")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 24)
  public static let key_SynthesizedExtension = SourceKitdUID(string: "key.synthesizedextensions")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 24)
  public static let key_UsingSwiftArgs = SourceKitdUID(string: "key.usingswiftargs")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 24)
  public static let key_Names = SourceKitdUID(string: "key.names")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 24)
  public static let key_UIDs = SourceKitdUID(string: "key.uids")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 24)
  public static let key_SyntacticOnly = SourceKitdUID(string: "key.syntactic_only")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 24)
  public static let key_ParentLoc = SourceKitdUID(string: "key.parent_loc")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 24)
  public static let key_IsTestCandidate = SourceKitdUID(string: "key.is_test_candidate")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 24)
  public static let key_Overrides = SourceKitdUID(string: "key.overrides")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 24)
  public static let key_AssociatedUSRs = SourceKitdUID(string: "key.associated_usrs")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 24)
  public static let key_ModuleName = SourceKitdUID(string: "key.modulename")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 24)
  public static let key_RelatedDecls = SourceKitdUID(string: "key.related_decls")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 24)
  public static let key_Simplified = SourceKitdUID(string: "key.simplified")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 24)
  public static let key_RangeContent = SourceKitdUID(string: "key.rangecontent")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 24)
  public static let key_CancelOnSubsequentRequest = SourceKitdUID(string: "key.cancel_on_subsequent_request")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 24)
  public static let key_RenameLocations = SourceKitdUID(string: "key.renamelocations")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 24)
  public static let key_Locations = SourceKitdUID(string: "key.locations")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 24)
  public static let key_NameType = SourceKitdUID(string: "key.nametype")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 24)
  public static let key_NewName = SourceKitdUID(string: "key.newname")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 24)
  public static let key_CategorizedEdits = SourceKitdUID(string: "key.categorizededits")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 24)
  public static let key_CategorizedRanges = SourceKitdUID(string: "key.categorizedranges")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 24)
  public static let key_RangesWorthNote = SourceKitdUID(string: "key.rangesworthnote")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 24)
  public static let key_Edits = SourceKitdUID(string: "key.edits")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 24)
  public static let key_EndLine = SourceKitdUID(string: "key.endline")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 24)
  public static let key_EndColumn = SourceKitdUID(string: "key.endcolumn")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 24)
  public static let key_ArgIndex = SourceKitdUID(string: "key.argindex")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 24)
  public static let key_Text = SourceKitdUID(string: "key.text")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 24)
  public static let key_Category = SourceKitdUID(string: "key.category")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 24)
  public static let key_IsFunctionLike = SourceKitdUID(string: "key.is_function_like")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 24)
  public static let key_IsNonProtocolType = SourceKitdUID(string: "key.is_non_protocol_type")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 24)
  public static let key_RefactorActions = SourceKitdUID(string: "key.refactor_actions")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 24)
  public static let key_RetrieveRefactorActions = SourceKitdUID(string: "key.retrieve_refactor_actions")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 24)
  public static let key_ActionUID = SourceKitdUID(string: "key.actionuid")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 24)
  public static let key_ActionUnavailableReason = SourceKitdUID(string: "key.actionunavailablereason")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 24)
  public static let key_CompileID = SourceKitdUID(string: "key.compileid")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 24)
  public static let key_CompilerArgsString = SourceKitdUID(string: "key.compilerargs-string")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 24)
  public static let key_ImplicitMembers = SourceKitdUID(string: "key.implicitmembers")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 24)
  public static let key_ExpectedTypes = SourceKitdUID(string: "key.expectedtypes")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 24)
  public static let key_Members = SourceKitdUID(string: "key.members")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 24)
  public static let key_TypeBuffer = SourceKitdUID(string: "key.printedtypebuffer")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 24)
  public static let key_ExpressionTypeList = SourceKitdUID(string: "key.expression_type_list")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 24)
  public static let key_ExpressionOffset = SourceKitdUID(string: "key.expression_offset")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 24)
  public static let key_ExpressionLength = SourceKitdUID(string: "key.expression_length")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 24)
  public static let key_ExpressionType = SourceKitdUID(string: "key.expression_type")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 24)
  public static let key_CanonicalizeType = SourceKitdUID(string: "key.canonicalize_type")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 24)
  public static let key_InternalDiagnostic = SourceKitdUID(string: "key.internal_diagnostic")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 24)
  public static let key_VFSName = SourceKitdUID(string: "key.vfs.name")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 24)
  public static let key_VFSOptions = SourceKitdUID(string: "key.vfs.options")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 24)
  public static let key_Files = SourceKitdUID(string: "key.files")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 26)

// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 28)
  public static let request_ProtocolVersion = SourceKitdUID(string: "source.request.protocol_version")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 28)
  public static let request_CompilerVersion = SourceKitdUID(string: "source.request.compiler_version")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 28)
  public static let request_CrashWithExit = SourceKitdUID(string: "source.request.crash_exit")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 28)
  public static let request_Demangle = SourceKitdUID(string: "source.request.demangle")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 28)
  public static let request_MangleSimpleClass = SourceKitdUID(string: "source.request.mangle_simple_class")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 28)
  public static let request_Index = SourceKitdUID(string: "source.request.indexsource")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 28)
  public static let request_DocInfo = SourceKitdUID(string: "source.request.docinfo")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 28)
  public static let request_CodeComplete = SourceKitdUID(string: "source.request.codecomplete")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 28)
  public static let request_CodeCompleteOpen = SourceKitdUID(string: "source.request.codecomplete.open")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 28)
  public static let request_CodeCompleteClose = SourceKitdUID(string: "source.request.codecomplete.close")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 28)
  public static let request_CodeCompleteUpdate = SourceKitdUID(string: "source.request.codecomplete.update")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 28)
  public static let request_CodeCompleteCacheOnDisk = SourceKitdUID(string: "source.request.codecomplete.cache.ondisk")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 28)
  public static let request_CodeCompleteSetPopularAPI = SourceKitdUID(string: "source.request.codecomplete.setpopularapi")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 28)
  public static let request_CodeCompleteSetCustom = SourceKitdUID(string: "source.request.codecomplete.setcustom")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 28)
  public static let request_TypeContextInfo = SourceKitdUID(string: "source.request.typecontextinfo")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 28)
  public static let request_ConformingMethodList = SourceKitdUID(string: "source.request.conformingmethods")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 28)
  public static let request_CursorInfo = SourceKitdUID(string: "source.request.cursorinfo")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 28)
  public static let request_RangeInfo = SourceKitdUID(string: "source.request.rangeinfo")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 28)
  public static let request_RelatedIdents = SourceKitdUID(string: "source.request.relatedidents")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 28)
  public static let request_EditorOpen = SourceKitdUID(string: "source.request.editor.open")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 28)
  public static let request_EditorOpenInterface = SourceKitdUID(string: "source.request.editor.open.interface")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 28)
  public static let request_EditorOpenHeaderInterface = SourceKitdUID(string: "source.request.editor.open.interface.header")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 28)
  public static let request_EditorOpenSwiftSourceInterface = SourceKitdUID(string: "source.request.editor.open.interface.swiftsource")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 28)
  public static let request_EditorOpenSwiftTypeInterface = SourceKitdUID(string: "source.request.editor.open.interface.swifttype")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 28)
  public static let request_EditorExtractTextFromComment = SourceKitdUID(string: "source.request.editor.extract.comment")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 28)
  public static let request_EditorClose = SourceKitdUID(string: "source.request.editor.close")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 28)
  public static let request_EditorReplaceText = SourceKitdUID(string: "source.request.editor.replacetext")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 28)
  public static let request_EditorFormatText = SourceKitdUID(string: "source.request.editor.formattext")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 28)
  public static let request_EditorExpandPlaceholder = SourceKitdUID(string: "source.request.editor.expand_placeholder")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 28)
  public static let request_EditorFindUSR = SourceKitdUID(string: "source.request.editor.find_usr")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 28)
  public static let request_EditorFindInterfaceDoc = SourceKitdUID(string: "source.request.editor.find_interface_doc")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 28)
  public static let request_BuildSettingsRegister = SourceKitdUID(string: "source.request.buildsettings.register")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 28)
  public static let request_ModuleGroups = SourceKitdUID(string: "source.request.module.groups")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 28)
  public static let request_NameTranslation = SourceKitdUID(string: "source.request.name.translation")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 28)
  public static let request_MarkupToXML = SourceKitdUID(string: "source.request.convert.markup.xml")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 28)
  public static let request_Statistics = SourceKitdUID(string: "source.request.statistics")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 28)
  public static let request_SyntacticRename = SourceKitdUID(string: "source.request.syntacticrename")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 28)
  public static let request_FindRenameRanges = SourceKitdUID(string: "source.request.find-syntactic-rename-ranges")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 28)
  public static let request_FindLocalRenameRanges = SourceKitdUID(string: "source.request.find-local-rename-ranges")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 28)
  public static let request_SemanticRefactoring = SourceKitdUID(string: "source.request.semantic.refactoring")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 28)
  public static let request_EnableCompileNotifications = SourceKitdUID(string: "source.request.enable-compile-notifications")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 28)
  public static let request_TestNotification = SourceKitdUID(string: "source.request.test_notification")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 28)
  public static let request_CollectExpressionType = SourceKitdUID(string: "source.request.expression.type")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 30)

// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 32)
  public static let kind_DeclFunctionFree = SourceKitdUID(string: "source.lang.swift.decl.function.free")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 32)
  public static let kind_RefFunctionFree = SourceKitdUID(string: "source.lang.swift.ref.function.free")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 32)
  public static let kind_DeclMethodInstance = SourceKitdUID(string: "source.lang.swift.decl.function.method.instance")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 32)
  public static let kind_RefMethodInstance = SourceKitdUID(string: "source.lang.swift.ref.function.method.instance")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 32)
  public static let kind_DeclMethodStatic = SourceKitdUID(string: "source.lang.swift.decl.function.method.static")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 32)
  public static let kind_RefMethodStatic = SourceKitdUID(string: "source.lang.swift.ref.function.method.static")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 32)
  public static let kind_DeclMethodClass = SourceKitdUID(string: "source.lang.swift.decl.function.method.class")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 32)
  public static let kind_RefMethodClass = SourceKitdUID(string: "source.lang.swift.ref.function.method.class")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 32)
  public static let kind_DeclAccessorGetter = SourceKitdUID(string: "source.lang.swift.decl.function.accessor.getter")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 32)
  public static let kind_RefAccessorGetter = SourceKitdUID(string: "source.lang.swift.ref.function.accessor.getter")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 32)
  public static let kind_DeclAccessorSetter = SourceKitdUID(string: "source.lang.swift.decl.function.accessor.setter")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 32)
  public static let kind_RefAccessorSetter = SourceKitdUID(string: "source.lang.swift.ref.function.accessor.setter")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 32)
  public static let kind_DeclAccessorWillSet = SourceKitdUID(string: "source.lang.swift.decl.function.accessor.willset")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 32)
  public static let kind_RefAccessorWillSet = SourceKitdUID(string: "source.lang.swift.ref.function.accessor.willset")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 32)
  public static let kind_DeclAccessorDidSet = SourceKitdUID(string: "source.lang.swift.decl.function.accessor.didset")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 32)
  public static let kind_RefAccessorDidSet = SourceKitdUID(string: "source.lang.swift.ref.function.accessor.didset")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 32)
  public static let kind_DeclAccessorAddress = SourceKitdUID(string: "source.lang.swift.decl.function.accessor.address")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 32)
  public static let kind_RefAccessorAddress = SourceKitdUID(string: "source.lang.swift.ref.function.accessor.address")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 32)
  public static let kind_DeclAccessorMutableAddress = SourceKitdUID(string: "source.lang.swift.decl.function.accessor.mutableaddress")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 32)
  public static let kind_RefAccessorMutableAddress = SourceKitdUID(string: "source.lang.swift.ref.function.accessor.mutableaddress")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 32)
  public static let kind_DeclAccessorRead = SourceKitdUID(string: "source.lang.swift.decl.function.accessor.read")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 32)
  public static let kind_RefAccessorRead = SourceKitdUID(string: "source.lang.swift.ref.function.accessor.read")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 32)
  public static let kind_DeclAccessorModify = SourceKitdUID(string: "source.lang.swift.decl.function.accessor.modify")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 32)
  public static let kind_RefAccessorModify = SourceKitdUID(string: "source.lang.swift.ref.function.accessor.modify")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 32)
  public static let kind_DeclConstructor = SourceKitdUID(string: "source.lang.swift.decl.function.constructor")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 32)
  public static let kind_RefConstructor = SourceKitdUID(string: "source.lang.swift.ref.function.constructor")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 32)
  public static let kind_DeclDestructor = SourceKitdUID(string: "source.lang.swift.decl.function.destructor")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 32)
  public static let kind_RefDestructor = SourceKitdUID(string: "source.lang.swift.ref.function.destructor")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 32)
  public static let kind_DeclFunctionPrefixOperator = SourceKitdUID(string: "source.lang.swift.decl.function.operator.prefix")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 32)
  public static let kind_DeclFunctionPostfixOperator = SourceKitdUID(string: "source.lang.swift.decl.function.operator.postfix")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 32)
  public static let kind_DeclFunctionInfixOperator = SourceKitdUID(string: "source.lang.swift.decl.function.operator.infix")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 32)
  public static let kind_RefFunctionPrefixOperator = SourceKitdUID(string: "source.lang.swift.ref.function.operator.prefix")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 32)
  public static let kind_RefFunctionPostfixOperator = SourceKitdUID(string: "source.lang.swift.ref.function.operator.postfix")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 32)
  public static let kind_RefFunctionInfixOperator = SourceKitdUID(string: "source.lang.swift.ref.function.operator.infix")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 32)
  public static let kind_DeclPrecedenceGroup = SourceKitdUID(string: "source.lang.swift.decl.precedencegroup")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 32)
  public static let kind_RefPrecedenceGroup = SourceKitdUID(string: "source.lang.swift.ref.precedencegroup")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 32)
  public static let kind_DeclSubscript = SourceKitdUID(string: "source.lang.swift.decl.function.subscript")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 32)
  public static let kind_RefSubscript = SourceKitdUID(string: "source.lang.swift.ref.function.subscript")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 32)
  public static let kind_DeclVarGlobal = SourceKitdUID(string: "source.lang.swift.decl.var.global")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 32)
  public static let kind_RefVarGlobal = SourceKitdUID(string: "source.lang.swift.ref.var.global")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 32)
  public static let kind_DeclVarInstance = SourceKitdUID(string: "source.lang.swift.decl.var.instance")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 32)
  public static let kind_RefVarInstance = SourceKitdUID(string: "source.lang.swift.ref.var.instance")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 32)
  public static let kind_DeclVarStatic = SourceKitdUID(string: "source.lang.swift.decl.var.static")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 32)
  public static let kind_RefVarStatic = SourceKitdUID(string: "source.lang.swift.ref.var.static")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 32)
  public static let kind_DeclVarClass = SourceKitdUID(string: "source.lang.swift.decl.var.class")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 32)
  public static let kind_RefVarClass = SourceKitdUID(string: "source.lang.swift.ref.var.class")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 32)
  public static let kind_DeclVarLocal = SourceKitdUID(string: "source.lang.swift.decl.var.local")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 32)
  public static let kind_RefVarLocal = SourceKitdUID(string: "source.lang.swift.ref.var.local")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 32)
  public static let kind_DeclVarParam = SourceKitdUID(string: "source.lang.swift.decl.var.parameter")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 32)
  public static let kind_DeclModule = SourceKitdUID(string: "source.lang.swift.decl.module")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 32)
  public static let kind_DeclClass = SourceKitdUID(string: "source.lang.swift.decl.class")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 32)
  public static let kind_RefClass = SourceKitdUID(string: "source.lang.swift.ref.class")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 32)
  public static let kind_DeclStruct = SourceKitdUID(string: "source.lang.swift.decl.struct")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 32)
  public static let kind_RefStruct = SourceKitdUID(string: "source.lang.swift.ref.struct")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 32)
  public static let kind_DeclEnum = SourceKitdUID(string: "source.lang.swift.decl.enum")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 32)
  public static let kind_RefEnum = SourceKitdUID(string: "source.lang.swift.ref.enum")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 32)
  public static let kind_DeclEnumCase = SourceKitdUID(string: "source.lang.swift.decl.enumcase")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 32)
  public static let kind_DeclEnumElement = SourceKitdUID(string: "source.lang.swift.decl.enumelement")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 32)
  public static let kind_RefEnumElement = SourceKitdUID(string: "source.lang.swift.ref.enumelement")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 32)
  public static let kind_DeclProtocol = SourceKitdUID(string: "source.lang.swift.decl.protocol")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 32)
  public static let kind_RefProtocol = SourceKitdUID(string: "source.lang.swift.ref.protocol")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 32)
  public static let kind_DeclExtension = SourceKitdUID(string: "source.lang.swift.decl.extension")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 32)
  public static let kind_DeclExtensionStruct = SourceKitdUID(string: "source.lang.swift.decl.extension.struct")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 32)
  public static let kind_DeclExtensionClass = SourceKitdUID(string: "source.lang.swift.decl.extension.class")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 32)
  public static let kind_DeclExtensionEnum = SourceKitdUID(string: "source.lang.swift.decl.extension.enum")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 32)
  public static let kind_DeclExtensionProtocol = SourceKitdUID(string: "source.lang.swift.decl.extension.protocol")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 32)
  public static let kind_DeclAssociatedType = SourceKitdUID(string: "source.lang.swift.decl.associatedtype")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 32)
  public static let kind_RefAssociatedType = SourceKitdUID(string: "source.lang.swift.ref.associatedtype")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 32)
  public static let kind_DeclOpaqueType = SourceKitdUID(string: "source.lang.swift.decl.opaquetype")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 32)
  public static let kind_RefOpaqueType = SourceKitdUID(string: "source.lang.swift.ref.opaquetype")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 32)
  public static let kind_DeclTypeAlias = SourceKitdUID(string: "source.lang.swift.decl.typealias")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 32)
  public static let kind_RefTypeAlias = SourceKitdUID(string: "source.lang.swift.ref.typealias")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 32)
  public static let kind_DeclGenericTypeParam = SourceKitdUID(string: "source.lang.swift.decl.generic_type_param")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 32)
  public static let kind_RefGenericTypeParam = SourceKitdUID(string: "source.lang.swift.ref.generic_type_param")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 32)
  public static let kind_RefModule = SourceKitdUID(string: "source.lang.swift.ref.module")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 32)
  public static let kind_StmtForEach = SourceKitdUID(string: "source.lang.swift.stmt.foreach")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 32)
  public static let kind_StmtFor = SourceKitdUID(string: "source.lang.swift.stmt.for")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 32)
  public static let kind_StmtWhile = SourceKitdUID(string: "source.lang.swift.stmt.while")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 32)
  public static let kind_StmtRepeatWhile = SourceKitdUID(string: "source.lang.swift.stmt.repeatwhile")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 32)
  public static let kind_StmtIf = SourceKitdUID(string: "source.lang.swift.stmt.if")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 32)
  public static let kind_StmtGuard = SourceKitdUID(string: "source.lang.swift.stmt.guard")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 32)
  public static let kind_StmtSwitch = SourceKitdUID(string: "source.lang.swift.stmt.switch")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 32)
  public static let kind_StmtCase = SourceKitdUID(string: "source.lang.swift.stmt.case")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 32)
  public static let kind_StmtBrace = SourceKitdUID(string: "source.lang.swift.stmt.brace")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 32)
  public static let kind_ExprCall = SourceKitdUID(string: "source.lang.swift.expr.call")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 32)
  public static let kind_ExprArg = SourceKitdUID(string: "source.lang.swift.expr.argument")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 32)
  public static let kind_ExprArray = SourceKitdUID(string: "source.lang.swift.expr.array")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 32)
  public static let kind_ExprDictionary = SourceKitdUID(string: "source.lang.swift.expr.dictionary")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 32)
  public static let kind_ExprObjectLiteral = SourceKitdUID(string: "source.lang.swift.expr.object_literal")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 32)
  public static let kind_ExprTuple = SourceKitdUID(string: "source.lang.swift.expr.tuple")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 32)
  public static let kind_ExprClosure = SourceKitdUID(string: "source.lang.swift.expr.closure")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 32)
  public static let kind_StructureElemId = SourceKitdUID(string: "source.lang.swift.structure.elem.id")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 32)
  public static let kind_StructureElemExpr = SourceKitdUID(string: "source.lang.swift.structure.elem.expr")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 32)
  public static let kind_StructureElemInitExpr = SourceKitdUID(string: "source.lang.swift.structure.elem.init_expr")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 32)
  public static let kind_StructureElemCondExpr = SourceKitdUID(string: "source.lang.swift.structure.elem.condition_expr")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 32)
  public static let kind_StructureElemPattern = SourceKitdUID(string: "source.lang.swift.structure.elem.pattern")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 32)
  public static let kind_StructureElemTypeRef = SourceKitdUID(string: "source.lang.swift.structure.elem.typeref")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 32)
  public static let kind_RangeSingleStatement = SourceKitdUID(string: "source.lang.swift.range.singlestatement")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 32)
  public static let kind_RangeSingleExpression = SourceKitdUID(string: "source.lang.swift.range.singleexpression")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 32)
  public static let kind_RangeSingleDeclaration = SourceKitdUID(string: "source.lang.swift.range.singledeclaration")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 32)
  public static let kind_RangeMultiStatement = SourceKitdUID(string: "source.lang.swift.range.multistatement")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 32)
  public static let kind_RangeMultiTypeMemberDeclaration = SourceKitdUID(string: "source.lang.swift.range.multitypememberdeclaration")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 32)
  public static let kind_RangeInvalid = SourceKitdUID(string: "source.lang.swift.range.invalid")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 32)
  public static let kind_NameObjc = SourceKitdUID(string: "source.lang.name.kind.objc")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 32)
  public static let kind_NameSwift = SourceKitdUID(string: "source.lang.name.kind.swift")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 32)
  public static let kind_Keyword = SourceKitdUID(string: "source.lang.swift.syntaxtype.keyword")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 32)
  public static let kind_Identifier = SourceKitdUID(string: "source.lang.swift.syntaxtype.identifier")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 32)
  public static let kind_TypeIdentifier = SourceKitdUID(string: "source.lang.swift.syntaxtype.typeidentifier")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 32)
  public static let kind_BuildConfigKeyword = SourceKitdUID(string: "source.lang.swift.syntaxtype.buildconfig.keyword")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 32)
  public static let kind_BuildConfigId = SourceKitdUID(string: "source.lang.swift.syntaxtype.buildconfig.id")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 32)
  public static let kind_PoundDirectiveKeyword = SourceKitdUID(string: "source.lang.swift.syntaxtype.pounddirective.keyword")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 32)
  public static let kind_AttributeId = SourceKitdUID(string: "source.lang.swift.syntaxtype.attribute.id")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 32)
  public static let kind_AttributeBuiltin = SourceKitdUID(string: "source.lang.swift.syntaxtype.attribute.builtin")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 32)
  public static let kind_Number = SourceKitdUID(string: "source.lang.swift.syntaxtype.number")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 32)
  public static let kind_String = SourceKitdUID(string: "source.lang.swift.syntaxtype.string")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 32)
  public static let kind_StringInterpolation = SourceKitdUID(string: "source.lang.swift.syntaxtype.string_interpolation_anchor")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 32)
  public static let kind_Comment = SourceKitdUID(string: "source.lang.swift.syntaxtype.comment")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 32)
  public static let kind_DocComment = SourceKitdUID(string: "source.lang.swift.syntaxtype.doccomment")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 32)
  public static let kind_DocCommentField = SourceKitdUID(string: "source.lang.swift.syntaxtype.doccomment.field")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 32)
  public static let kind_CommentMarker = SourceKitdUID(string: "source.lang.swift.syntaxtype.comment.mark")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 32)
  public static let kind_CommentURL = SourceKitdUID(string: "source.lang.swift.syntaxtype.comment.url")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 32)
  public static let kind_Placeholder = SourceKitdUID(string: "source.lang.swift.syntaxtype.placeholder")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 32)
  public static let kind_ObjectLiteral = SourceKitdUID(string: "source.lang.swift.syntaxtype.objectliteral")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 32)
  public static let kind_Expr = SourceKitdUID(string: "source.lang.swift.expr")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 32)
  public static let kind_Stmt = SourceKitdUID(string: "source.lang.swift.stmt")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 32)
  public static let kind_Type = SourceKitdUID(string: "source.lang.swift.type")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 32)
  public static let kind_ForEachSequence = SourceKitdUID(string: "source.lang.swift.foreach.sequence")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 32)
  public static let kind_DiagNote = SourceKitdUID(string: "source.diagnostic.severity.note")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 32)
  public static let kind_DiagWarning = SourceKitdUID(string: "source.diagnostic.severity.warning")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 32)
  public static let kind_DiagError = SourceKitdUID(string: "source.diagnostic.severity.error")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 32)
  public static let kind_CodeCompletionEverything = SourceKitdUID(string: "source.codecompletion.everything")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 32)
  public static let kind_CodeCompletionModule = SourceKitdUID(string: "source.codecompletion.module")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 32)
  public static let kind_CodeCompletionKeyword = SourceKitdUID(string: "source.codecompletion.keyword")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 32)
  public static let kind_CodeCompletionLiteral = SourceKitdUID(string: "source.codecompletion.literal")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 32)
  public static let kind_CodeCompletionCustom = SourceKitdUID(string: "source.codecompletion.custom")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 32)
  public static let kind_CodeCompletionIdentifier = SourceKitdUID(string: "source.codecompletion.identifier")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 32)
  public static let kind_CodeCompletionDescription = SourceKitdUID(string: "source.codecompletion.description")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 32)
  public static let kind_EditActive = SourceKitdUID(string: "source.edit.kind.active")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 32)
  public static let kind_EditInactive = SourceKitdUID(string: "source.edit.kind.inactive")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 32)
  public static let kind_EditSelector = SourceKitdUID(string: "source.edit.kind.selector")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 32)
  public static let kind_EditString = SourceKitdUID(string: "source.edit.kind.string")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 32)
  public static let kind_EditComment = SourceKitdUID(string: "source.edit.kind.comment")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 32)
  public static let kind_EditMismatch = SourceKitdUID(string: "source.edit.kind.mismatch")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 32)
  public static let kind_EditUnknown = SourceKitdUID(string: "source.edit.kind.unknown")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 32)
  public static let kind_RenameRangeBase = SourceKitdUID(string: "source.refactoring.range.kind.basename")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 32)
  public static let kind_RenameRangeKeywordBase = SourceKitdUID(string: "source.refactoring.range.kind.keyword-basename")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 32)
  public static let kind_RenameRangeParam = SourceKitdUID(string: "source.refactoring.range.kind.parameter-and-whitespace")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 32)
  public static let kind_RenameRangeNoncollapsibleParam = SourceKitdUID(string: "source.refactoring.range.kind.noncollapsible-parameter")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 32)
  public static let kind_RenameRangeDeclArgLabel = SourceKitdUID(string: "source.refactoring.range.kind.decl-argument-label")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 32)
  public static let kind_RenameRangeCallArgLabel = SourceKitdUID(string: "source.refactoring.range.kind.call-argument-label")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 32)
  public static let kind_RenameRangeCallArgColon = SourceKitdUID(string: "source.refactoring.range.kind.call-argument-colon")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 32)
  public static let kind_RenameRangeCallArgCombined = SourceKitdUID(string: "source.refactoring.range.kind.call-argument-combined")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 32)
  public static let kind_RenameRangeSelectorArgLabel = SourceKitdUID(string: "source.refactoring.range.kind.selector-argument-label")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 32)
  public static let kind_Definition = SourceKitdUID(string: "source.syntacticrename.definition")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 32)
  public static let kind_Reference = SourceKitdUID(string: "source.syntacticrename.reference")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 32)
  public static let kind_Call = SourceKitdUID(string: "source.syntacticrename.call")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 32)
  public static let kind_Unknown = SourceKitdUID(string: "source.syntacticrename.unknown")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 32)
  public static let kind_StatNumRequests = SourceKitdUID(string: "source.statistic.num-requests")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 32)
  public static let kind_StatNumSemaRequests = SourceKitdUID(string: "source.statistic.num-semantic-requests")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 32)
  public static let kind_SyntaxTreeOff = SourceKitdUID(string: "source.syntaxtree.transfer.off")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 32)
  public static let kind_SyntaxTreeIncremental = SourceKitdUID(string: "source.syntaxtree.transfer.incremental")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 32)
  public static let kind_SyntaxTreeFull = SourceKitdUID(string: "source.syntaxtree.transfer.full")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 32)
  public static let kind_SyntaxTreeSerializationJSON = SourceKitdUID(string: "source.syntaxtree.serialization.format.json")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 32)
  public static let kind_SyntaxTreeSerializationByteTree = SourceKitdUID(string: "source.syntaxtree.serialization.format.bytetree")
// ###sourceLocation(file: "/Users/zhuzhenhua/Documents/SwiftSourceCode/swift/tools/SourceKit/tools/swift-lang/UIDs.swift.gyb", line: 34)

public static let compilerCrashedNotification = SourceKitdUID(string: "notification.toolchain-compiler-crashed")
public static let source_notification_editor_documentupdate = SourceKitdUID(string: "source.notification.editor.documentupdate")
}
